apiVersion: v1
data:
  locustfile.py: |
    from locust import HttpUser, task, between
    class UserTasks(HttpUser):
        wait_time = between(5, 15)

        @task
        def rachel(self):
            self.client.get("/dispatch?customer=123&nonse=0.6308392664170006")
        @task
        def trom(self):
            self.client.get("/dispatch?customer=392&nonse=0.015296363321630757")
        @task
        def japanese(self):
            self.client.get("/dispatch?customer=731&nonse=0.8022286220408668")
        @task
        def coffee(self):
            self.client.get("/dispatch?customer=567&nonse=0.0022220379420636593")
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: load-hotrod
  name: load-hotrod-cm0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: load-hotrod
  name: load-hotrod
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: load-hotrod
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: load-hotrod
    spec:
      containers:
        - env:
            - name: ATTACKED_HOST
              value: http://hotrod.default.svc.cluster.local:9000
            - name: LOCUST_MODE
              value: standalone
            - name: LOCUST_OPTS
              value: --headless -u 10 -r 1
            - name: NO_PROXY
              value: standalone
            - name: QUIET_MODE
              value: "false"
            - name: TASK_DELAY_FROM
              value: "5"
            - name: TASK_DELAY_TO
              value: "30"
          image: grubykarol/locust:1.2.3-python3.9-alpine3.12
          name: load-hotrod
          ports:
            - containerPort: 8089
          resources: {}
          volumeMounts:
            - mountPath: /locust
              name: load-hotrod-cm0
      hostname: load-hotrod
      restartPolicy: Always
      volumes:
        - configMap:
            name: load-hotrod-cm0
          name: load-hotrod-cm0
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: load-hotrod
  name: load-hotrod
spec:
  ports:
    - name: "8089"
      port: 8089
      targetPort: 8089
  selector:
    io.kompose.service: load-hotrod
status:
  loadBalancer: {}

