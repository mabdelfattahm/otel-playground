apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: query-service
  name: query-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: query-service
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: query-service
    spec:
      containers:
        - args:
            - -config=/root/config/prometheus.yml
          env:
            - name: ClickHouseUrl
              value: tcp://clickhouse:9000
            - name: GODEBUG
              value: netdns=go
            - name: POSTHOG_API_KEY
              value: H-htDCae7CR3RV57gUzmol6IAKtm5IMCvbcm_fwnL-w
            - name: STORAGE
              value: clickhouse
          image: signoz/query-service:0.4.1
          name: query-service
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /root/config/prometheus.yml
              name: query-service-cm0
              subPath: prometheus.yml
            - mountPath: /root/config/dashboards
              name: query-service-cm1
            - mountPath: /var/lib/signoz/
              name: query-service-storage
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: prometheus.yml
                path: prometheus.yml
            name: query-service-cm0
          name: query-service-cm0
        - configMap:
            name: query-service-cm1
          name: query-service-cm1
        - persistentVolumeClaim:
            claimName: query-service-pvc
          name: query-service-storage
status: {}
